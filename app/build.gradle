plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android'
    id 'jacoco'
    id 'com.google.gms.google-services'

}
apply from: "$project.rootDir/jacoco.gradle"
apply from: "./ktlint.gradle"

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.fruitapp"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation platform('com.google.firebase:firebase-bom:30.4.1')
    implementation 'com.google.firebase:firebase-analytics-ktx'

    //Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:30.2.0')


    // TODO: Add the dependencies for Firebase products you want to use
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-messaging:23.0.8'
    // Firebase Remote Config (Kotlin)
    implementation 'com.google.firebase:firebase-config-ktx'

    dependencies {


        def coroutinesVersion = '1.4.3'
        def retrofitVersion = "2.9.0"
        def lifeCycleVersion = '2.2.0'
        def daggerHiltVersion = '2.41'
        def hiltLifeCycleVersion = '1.0.0-alpha03'
        def coilVersion = '1.2.2'

        def lifecycle_version = "2.6.0-alpha01"
        def arch_version = "2.1.0"

        // ViewModel
        implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
        // ViewModel utilities for Compose
        implementation("androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version")
        // LiveData
        implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
        // Lifecycles only (without ViewModel or LiveData)
        implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")

        // Saved state module for ViewModel
        implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")

        /**
         * Networking
         * 1 Test API response using Postman
         * 2 Create model classes (Plugin for Kotlin to convert Json String into Kotlin data class code quickly)
         *
         */
        implementation 'androidx.navigation:navigation-fragment-ktx:2.5.1'
        implementation 'androidx.navigation:navigation-ui-ktx:2.5.1'

        //Coroutines
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutinesVersion"

        //Retrofit
        implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
        implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
        implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"
        implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"

        implementation 'androidx.core:core-ktx:1.7.0'
        implementation 'androidx.appcompat:appcompat:1.5.0'
        implementation 'com.google.android.material:material:1.6.1'
        implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
        testImplementation 'junit:junit:4.13.2'
        androidTestImplementation 'androidx.test.ext:junit:1.1.3'


        //for image rendering
        implementation "io.coil-kt:coil:$coilVersion"

        implementation 'androidx.core:core-ktx:1.7.0'
        implementation 'androidx.appcompat:appcompat:1.4.2'
        implementation 'com.google.android.material:material:1.6.1'
        implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

        androidTestImplementation('androidx.test:runner:1.4.0')
        androidTestImplementation('androidx.test:rules:1.4.0')
        /**
         * Unit testing
         */
        testImplementation 'junit:junit:4.13.2'
        testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4")

        testImplementation 'io.mockk:mockk:1.12.7'
        testImplementation 'androidx.arch.core:core-testing:2.1.0'
        testImplementation 'junit:junit:4.13.2'


        testImplementation 'junit:junit:4.13.2'
        androidTestImplementation 'androidx.test.ext:junit:1.1.3'
        //WorkManager
        implementation 'androidx.work:work-runtime-ktx:2.7.1'

        implementation("androidx.hilt:hilt-work:1.0.0")
        // When using Kotlin.
        kapt("androidx.hilt:hilt-compiler:1.0.0")
        // When using Java.
        annotationProcessor("androidx.hilt:hilt-compiler:1.0.0")

        /**
         * Espresso
         */
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
        androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.4.0'
        androidTestImplementation('androidx.test:runner:1.4.0')
        androidTestImplementation('androidx.test:rules:1.4.0')
        androidTestUtil 'androidx.test:orchestrator:1.4.1'

        debugImplementation 'androidx.fragment:fragment-testing:1.5.2'
        androidTestImplementation 'androidx.navigation:navigation-testing:2.5.2'

        def activity_version = "1.1.0"
        implementation "androidx.activity:activity-ktx:$activity_version"
        implementation "androidx.fragment:fragment-ktx:$activity_version"
        // To use Kotlin annotation processing tool (kapt)

        /**
         * Architecture components
         */

        // ViewModel
        // implementation "androidx.lifecycle:lifecycle-extensions:$lifeCycleVersion"
//    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifeCycleVersion"
//    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifeCycleVersion"
        //  implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifeCycleVersion"


        //ViewBinding
        implementation 'com.android.databinding:viewbinding:7.2.2'

        //material design
        implementation 'com.google.android.material:material:1.6.1'

        //Glide
        implementation 'com.github.bumptech.glide:glide:4.12.0'
        kapt 'com.github.bumptech.glide:compiler:4.12.0'

        /**
         *     Hilt for di
         *
         */
        implementation "com.google.dagger:hilt-android:$daggerHiltVersion"
        kapt "com.google.dagger:hilt-android-compiler:$daggerHiltVersion"
        // Hilt ViewModel extension
        //implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltLifeCycleVersion"
        kapt "androidx.hilt:hilt-compiler:$hiltLifeCycleVersion"

        def room_version = "2.4.3"

        implementation("androidx.room:room-runtime:$room_version")
        annotationProcessor("androidx.room:room-compiler:$room_version")

        // To use Kotlin annotation processing tool (kapt)
        kapt("androidx.room:room-compiler:$room_version")

        // optional - Kotlin Extensions and Coroutines support for Room
        implementation("androidx.room:room-ktx:$room_version")
        /**
         *
         * Security key
         *
         */
        // SQLCipher
        //implementation 'net.zetetic:android-database-sqlcipher:4.5.0'
        // For EncryptedSharedPreferences
        //implementation "androidx.security:security-crypto:1.0.0"
        // For MasterKey
        //implementation "androidx.security:security-crypto-ktx:1.1.0-alpha03"
// Instrumented Unit Tests

    }

}